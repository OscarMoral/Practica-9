---
import Layout from '../../layouts/Layout.astro';
import { db } from '../../firebase/config';
import { ref, get } from 'firebase/database';
import type { Course } from '../../types/course';
import CourseDialogs from '../../components/CourseDialogs';

const { id } = Astro.params;

// Obtener los datos del curso y el estado de compra desde Firebase
let course: Course | null = null;
let isPurchased = false;

try {
  const courseRef = ref(db, `courses/${id}`);
  const courseSnapshot = await get(courseRef);
  course = courseSnapshot.val();

  // Verificar si el curso fue comprado
  const purchaseRef = ref(db, `purchases/${id}`);
  const purchaseSnapshot = await get(purchaseRef);
  isPurchased = purchaseSnapshot.exists();

} catch (error) {
  console.error('Error al obtener los datos:', error);
}

if (!course) {
  return Astro.redirect('/404');
}
---

<Layout title={course.title}>
  <main class="container mx-auto px-4 py-8">
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
      <!-- Imagen del curso -->
      <div class="relative h-[400px]">
        <img
          src={course.image}
          alt={course.title}
          class="w-full h-full object-cover rounded-lg"
        />
      </div>

      <!-- InformaciÃ³n del curso -->
      <div class="space-y-6">
        <h1 class="text-4xl font-bold">{course.title}</h1>
        <div class="flex items-center gap-4">
          <span class="px-3 py-1 bg-blue-100 text-blue-800 rounded-full">
            {course.category}
          </span>
          <span class="text-gray-600">
            DuraciÃ³n: {course.duration}
          </span>
        </div>

        <div class="flex items-center gap-4">
          <div class="text-3xl font-bold text-green-600">
            ${course.price}
          </div>
          {course.rating && (
            <div class="flex items-center gap-1">
              <span class="text-yellow-400">â˜…</span>
              <span>{course.rating}</span>
              {course.enrolled && (
                <span class="text-gray-500">({course.enrolled} estudiantes)</span>
              )}
            </div>
          )}
        </div>

        <div class="flex items-center gap-4">
          <img
            src={course.instructor.avatar}
            alt={course.instructor.name}
            class="w-12 h-12 rounded-full"
          />
          <div>
            <h3 class="font-semibold">{course.instructor.name}</h3>
            <p class="text-gray-600 text-sm">{course.instructor.bio}</p>
          </div>
        </div>

        <p class="text-gray-700 text-lg">
          {course.description}
        </p>

        <!-- Video del curso -->
        <div id="videoContainer" class={isPurchased ? '' : 'hidden'}>
          <h2 class="text-2xl font-bold mb-4">Video Tutorial</h2>
          <div class="aspect-video">
            {(() => {
              const videoUrl = course.videoUrl;
              
              // FunciÃ³n para formar la URL de embed de YouTube
              const getEmbedUrl = (videoId: string) => {
                return `https://www.youtube.com/embed/${videoId}`;
              };

              return (
                <iframe
                  src={getEmbedUrl(videoUrl)}
                  class="w-full h-full rounded-lg"
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                  allowfullscreen
                />
              );
            })()}
          </div>
        </div>

        <div class="space-y-4">
          <h2 class="text-2xl font-bold">Lo que aprenderÃ¡s</h2>
          <ul class="grid grid-cols-1 md:grid-cols-2 gap-2">
            {course.learningObjectives?.map((objective) => (
              <li class="flex items-center gap-2">
                <span class="text-green-500">âœ“</span>
                {objective}
              </li>
            ))}
          </ul>
        </div>

        <div class="space-y-4">
          <h2 class="text-2xl font-bold">Temario</h2>
          <div class="space-y-2">
            {course.syllabus?.map((module, index) => (
              <div class="border rounded-lg p-4">
                <h3 class="font-bold">MÃ³dulo {index + 1}: {module.title}</h3>
                <ul class="mt-2 space-y-1">
                  {module.lessons?.map((lesson) => (
                    <li class="flex items-center justify-between text-gray-600">
                      <span>â€¢ {lesson.title}</span>
                      <span class="text-sm">{lesson.duration}</span>
                    </li>
                  ))}
                </ul>
              </div>
            ))}
          </div>
        </div>

        <CourseDialogs course={course} client:load />
      </div>
    </div>
  </main>
</Layout>

<script>
  const videoContainer = document.getElementById('videoContainer');

  if (videoContainer) {
    // Escuchar el evento de compra confirmada
    document.addEventListener('purchaseConfirmed', () => {
      console.log("ðŸ”¹ Compra confirmada, mostrando video");
      // Mostrar el video
      videoContainer.classList.remove('hidden');
      
      // Desplazamiento suave hacia el video
      setTimeout(() => {
        videoContainer.scrollIntoView({ 
          behavior: 'smooth',
          block: 'start'
        });
      }, 100);
    });
  }
</script>

<style>
  .animate-fade-in {
    animation: fadeIn 0.3s ease-out forwards;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style> 